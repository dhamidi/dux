package cli

import (
	"flag"
	"fmt"
	"io"
	"strings"

	"github.com/dhamidi/dux"
)

// Command{{.name}} is a CLI command
type Command{{.name}} struct {
     *parentCommand
}

// NewCommand{{.name}} creates a new, empty instance of this command.
func NewCommand{{.name}}() *Command{{.name}} {
	return &Command{{.name}}{
	    parentCommand: new(parentCommand),
        }
}

// Exec implements Command
func (cmd *Command{{.name}}) Exec(ctx *CLI, args []string) (Command, error) {
        return cmd, fmt.Errorf("not implemented")
}

// Options implements Command
func (cmd *Command{{.name}}) Options() *flag.FlagSet {
     return nil
}

// Description implements HasDescription
func (cmd *Command{{.name}}) Description() string { return `TODO: Add description` }

// ShowUsage implements HasUsage
func (cmd *Command{{.name}}) ShowUsage(out io.Writer) {
	fmt.Fprintf(out, "Usage: %s {{.name}}\n\n", cmd.CommandPath())
	fmt.Fprintf(out, "TODO: Add usage:\n")
	fmt.Fprintf(out, "\n")
}
